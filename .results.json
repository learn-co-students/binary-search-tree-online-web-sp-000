{"version":"3.10.1","examples":[{"id":"./spec/binary_search_tree_spec.rb[1:1]","description":"retains data","full_description":"Binary Search Tree retains data","status":"passed","file_path":"./spec/binary_search_tree_spec.rb","line_number":3,"run_time":0.0019128,"pending_message":null},{"id":"./spec/binary_search_tree_spec.rb[1:2]","description":"inserts lesser values to the left","full_description":"Binary Search Tree inserts lesser values to the left","status":"passed","file_path":"./spec/binary_search_tree_spec.rb","line_number":7,"run_time":0.0002889,"pending_message":null},{"id":"./spec/binary_search_tree_spec.rb[1:3]","description":"inserts lesser or equal values to the left","full_description":"Binary Search Tree inserts lesser or equal values to the left","status":"passed","file_path":"./spec/binary_search_tree_spec.rb","line_number":14,"run_time":0.0002216,"pending_message":null},{"id":"./spec/binary_search_tree_spec.rb[1:4]","description":"inserts greater data to the right","full_description":"Binary Search Tree inserts greater data to the right","status":"passed","file_path":"./spec/binary_search_tree_spec.rb","line_number":21,"run_time":0.0001289,"pending_message":null},{"id":"./spec/binary_search_tree_spec.rb[1:5]","description":"manages a complex tree correctly","full_description":"Binary Search Tree manages a complex tree correctly","status":"passed","file_path":"./spec/binary_search_tree_spec.rb","line_number":28,"run_time":0.0002355,"pending_message":null}],"summary":{"duration":0.0098842,"example_count":5,"failure_count":0,"pending_count":0,"errors_outside_of_examples_count":0},"summary_line":"5 examples, 0 failures"}